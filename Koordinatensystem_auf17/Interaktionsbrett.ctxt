#BlueJ class context
comment0.target=Interaktionsbrett
comment0.text=\r\n\ Klasse\ zur\ einfachen\ Darstellung\ elementarer\ graphischer\ Elemente\r\n\ (Punkt,\ Linie,\ Rechteck,\ Kreis),\ die\ auf\ einer\ graphischen\r\n\ Fl&auml;che\ angezeigt\ werden.\ Neben\ der\ reinen\ Anzeige\ gibt\ es\r\n\ M&ouml;glichkeiten,\ die\ Elemente\ mit\ der\ Maus\ verschiebbar\ zu\r\n\ machen\ und\ bearbeitbar\ zu\ machen.\ Die\ zugeh&ouml;rigen\ Methoden\r\n\ haben\ zwei\ Parameter\ ein\ Objekt,\ das\ bei\ einer\ &Auml;nderung\r\n\ informiert\ werden\ soll,\ und\ ein\ String,\ mit\ dem\ es\ m&ouml;glich\ ist\r\n\ Objekte\ zu\ unterscheiden.\ Wird\ ein\ graphisches\ Element\ mit\ diesen\r\n\ beiden\ Parametern\ an\ ein\ Interaktionsbrett\ &uuml;bergeben,\r\n\ k&ouml;nnen\ mit\ der\ Nutzung\ dieser\ Parameter\ die\ Elemente\r\n\ verschoben\ und\ gel&ouml;scht\ werden.\ <br>\r\n\r\n\ <a\ name\="Nutzung">\ Will\ man\ die\ Maussteuerungsm&ouml;glichkeiten\r\n\ nutzen</a>,\ muss\ das\ mit\ dem\ graphischen\ Element\ &uuml;bergebene\r\n\ Objekt\ eine\ oder\ mehrere\ der\ folgenden\ Methoden\ implementieren,\ die\r\n\ dann\ vom\ Interaktionsbrett\ bei\ einer\ Mausaktion\ aufgerufen\ werden.\r\n\ <ul>\r\n\ <li>\r\n\ <code>\ public\ Boolean\ mitMausVerschoben(String\ name,\ int\ x,\ int\ y)\r\n\ </code>\r\n\ <br>\r\n\ Das\ Objekt\ wird\ informiert,\ dass\ ein\ graphisches\ Element\ mit\ Namen\r\n\ name\ an\ die\ Position\ (x,y)\ verschoben\ wurde,\ die\ zugeh&ouml;rige\r\n\ Mausbewegung\ ist\ beendet.\ Mit\ dem\ R&uuml;ckgabewert\ kann\ man\r\n\ mitteilen,\ ob\ die\ Verschiebung\ &uuml;berhaupt\ gew&uuml;nscht\ ist\r\n\ (true)\ oder\ nicht\ (false).</li>\r\n\r\n\ <li>\r\n\ <code>\ public\ Boolean\ mitMausAngeklickt(String\ name,\ int\ x,\ int\ y)</code>\r\n\ <br>\r\n\ Das\ Objekt\ wird\ informiert,\ dass\ ein\ graphisches\ Element\ mit\ Namen\r\n\ name\ an\ der\ Position\ (x,y)\ gerade\ angeklickt\ wurde,\ die\r\n\ zugeh&ouml;rige\ Mausbewegung\ beginnt\ gerade.\ Mit\ dem\r\n\ R&uuml;ckgabewert\ kann\ man\ mitteilen,\ ob\ eine\ Bearbeitung\ (konkret\r\n\ eine\ Verschiebung)\ &uuml;berhaupt\ gew&uuml;nscht\ ist\ (true)\ oder\r\n\ nicht\ (false).</li>\r\n\ <li>\r\n\ <code>\ public\ Boolean\ mitMausLosgelassen(String\ name,\ int\ x,\ int\ y)</code>\r\n\ <br>\r\n\r\n\ Das\ Objekt\ wird\ informiert,\ dass\ ein\ graphisches\ Element\ mit\ Namen\r\n\ name\ gerade\ an\ die\ Position\ (x,y)\ verschoben\ und\ an\ dieser\ Position\r\n\ losgelassen\ wurde,\ die\ zugeh&ouml;rige\ Mausbewegung\ endet\ gerade.\r\n\ Mit\ dem\ R&uuml;ckgabewert\ kann\ man\ mitteilen,\ ob\ das\ Ablegen\ des\r\n\ Elements\ an\ dieser\ Stelle\ &uuml;berhaupt\ gew&uuml;nscht\ ist\ (true)\r\n\ oder\ nicht\ (false).\ Der\ sicherlich\ selten\ genutzte\ Fall\ false\ hat\r\n\ nur\ Auswirkungen,\ wenn\ der\ Nutzer\ zum\ n&auml;chsten\ Zeitpunkt\ auf\r\n\ eine\ Stelle\ klickt,\ an\ der\ sich\ kein\ ausw&auml;hlbares\ graphisches\r\n\ Element\ befinde.\ Dann\ wird\ das\ zuletzt\ benutzte\ Element\ genutzt\ und\r\n\ z.\ B.\ wieder\ verschoben.</li>\r\n\ </ul>\r\n\r\n\ Objekte\ k&ouml;nnen\ dem\ Interaktionsbrett\ mitteilen,\ dass\ sie\r\n\ &uuml;ber\ gedr&uuml;ckte\ Tasten\ informiert\ werden\ wollen.\ Hierzu\r\n\ dient\ die\ Methode\r\n\ <code>willTasteninfo(&lt;zuInformierendesObjekt&gt;)</code>.\ Das\ zu\r\n\ informierende\ Objekt\ muss\ dann\ eine\ Methode\ der\ folgenden\ Form\r\n\ realisieren\:\ <br>\r\n\ <code>public\ void\ tasteGedrueckt(String\ s)</code>\ <br>\r\n\ <br>\r\n\ <br>\r\n\r\n\ Weiterhin\ bieten\ Objekte\ der\ Klasse\ ein\ einfaches\ Stoppuhr-\ Objekt,\r\n\ das\ gestartet\ und\ gestoppt\ werden\ kann.\r\n\r\n
comment1.params=
comment1.target=Interaktionsbrett()
comment1.text=\r\n\ Konstruktor\ zum\ Erzeugen\ eines\ Interaktionsbretts.\ Das\ Brett\ wird\r\n\ sofort\ nach\ der\ Erstellung\ angezeigt.\r\n
comment10.params=milli
comment10.target=void\ pause(int)
comment10.text=\r\n\ Methode,\ um\ Bearbeitung\ f&uuml;r\ eine\ kurze\ in\ Millisekunden\r\n\ angegebene\ Zeit\ anzuhalten.\r\n\r\n\ @param\ milli\ Zeit\ in\ Millisekunden,\ die\ der\ Programmablauf\r\n\ mindestens\ angehalten\ werden\ soll\r\n
comment11.params=text
comment11.target=void\ textZeigen(java.lang.String)
comment11.text=\r\n\ Methode\ zur\ &Auml;nderung\ des\ in\ der\ Fu&szlig;zeile\ angezeigten\r\n\ Textes.\r\n\r\n\ @param\ text\ neuer\ anzuzeigender\ Text\r\n
comment12.params=start\ ende
comment12.target=int\ zufall(int,\ int)
comment12.text=\r\n\ Methode\ zur\ Erzeugung\ einer\ ganzahligen\ Zufallszahl\ zwischen\r\n\ (einschlie&szlig;lich)\ den\ &uuml;bergebenen\ Grenzen.\ Es\ wird\r\n\ erwartet\ und\ nicht\ gepr&uuml;ft,\ dass\ der\ Endwert\ nicht\ kleiner\r\n\ als\ der\ Startwert\ ist.\r\n\r\n\ @param\ start\ minimal\ m&ouml;glicher\ Zufallswert\r\n\ @param\ ende\ maximal\ m&ouml;glicher\ Zufallswert\r\n\ @return\ zuf&auml;lliger\ Wert\ zwischen\ start\ und\ ende\ (auch\ diese\r\n\ beiden\ Werte\ sind\ m&ouml;glich\r\n
comment13.params=text
comment13.target=int\ textlaenge(java.lang.String)
comment13.text=\r\n\ Berechnet\ die\ L&auml;nge\ eines\ Textes\ f&uuml;r\ eine\ m&ouml;gliche\r\n\ graphische\ Ausgabe.\ Sollte\ man\ z.\ B.\ Textumrandungen\ basteln,\ ist\r\n\ zu\ beachten,\ dass\ Rand\ an\ beiden\ Seiten\ hinzugef&uuml;gt\ wird.\r\n\r\n\ @param\ text\ Text\ dessen\ Ausgabel&auml;nge\ in\ Pixel\ bestimmt\r\n\ werden\ soll\r\n\ @return\ L&auml;nge\ des\ &uuml;bergebenen\ Textes\ in\ Pixel\r\n
comment14.params=x\ y
comment14.target=void\ neuerPunkt(int,\ int)
comment14.text=\r\n\ Methode\ zum\ Zeichnen\ eines\ neuen\ Punktes.\ Der\ Punkt\ kann\r\n\ sp&auml;ter\ nicht\ mehr\ gel&ouml;scht\ werden.\r\n\r\n\ @param\ x\ x-Koordinate\ des\ Punktes\ (beginnend\ von\ links\ nach\r\n\ rechts)\r\n\ @param\ y\ y-Koordinate\ des\ Punktes\ (beginnend\ von\ oben\ nach\ unten)\r\n
comment15.params=x\ y\ breite\ hoehe
comment15.target=void\ neuesRechteck(int,\ int,\ int,\ int)
comment15.text=\r\n\ Methode\ zum\ Zeichnen\ eines\ neuen\ Rechtecks.\ Das\ Rechteck\ kann\r\n\ sp&auml;ter\ nicht\ mehr\ gel&ouml;scht\ werden.\r\n\r\n\ @param\ x\ x-Koordinate\ der\ linken\ oberen\ Ecke\ des\ Rechtecks\r\n\ @param\ y\ y-Koordinate\ der\ linken\ oberen\ Ecke\ des\ Rechtecks\r\n\ @param\ breite\ Breite\ des\ Rechtecks\ (in\ Richtung\ x-Achse)\r\n\ @param\ hoehe\ H&ouml;he\ des\ Rechtecks\ (in\ Richtung\ y-Achse)\r\n
comment16.params=x\ y\ radius
comment16.target=void\ neuerKreis(int,\ int,\ int)
comment16.text=\r\n\ Methode\ zum\ Zeichnen\ eines\ neuen\ Kreises.\ Der\ Kreis\ kann\r\n\ sp&auml;ter\ nicht\ mehr\ gel&ouml;scht\ werden.\r\n\r\n\ @param\ x\ x-Koordinate\ der\ linken-oberen\ Ecke\ des\ Quadrates,\ das\r\n\ den\ Kreis\ beinhaltet\r\n\ @param\ y\ y-Koordinate\ der\ linken-oberen\ Ecke\ des\ Quadrates,\ das\r\n\ den\ Kreis\ beinhaltet\r\n\ @param\ radius\ Radius\ des\ Kreises\r\n
comment17.params=x1\ y1\ x2\ y2
comment17.target=void\ neueLinie(int,\ int,\ int,\ int)
comment17.text=\r\n\ Methode\ zum\ Zeichnen\ einer\ neuen\ Linie.\ Die\ Linie\ kann\r\n\ sp&auml;ter\ nicht\ mehr\ gel&ouml;scht\ werden.\ Die\ Linie\ verbindet\r\n\ zwei\ Punkte,\ die\ als\ Parameter\ jeweils\ mit\ x-\ und\ y-Wert\r\n\ &uuml;bergeben\ werden.\r\n\r\n\ @param\ x1\ x-Koordinate\ des\ ersten\ Punkts\ der\ Linie\r\n\ @param\ y1\ y-Koordinate\ des\ ersten\ Punkts\ der\ Linie\r\n\ @param\ x2\ x-Koordinate\ des\ zweiten\ Punkts\ der\ Linie\r\n\ @param\ y2\ y-Koordinate\ des\ zweiten\ Punkts\ der\ Linie\r\n
comment18.params=x\ y\ text
comment18.target=void\ neuerText(int,\ int,\ java.lang.String)
comment18.text=\r\n\ Methode\ zur\ Ausgabe\ eines\ Textes.\ Der\ als\ Parameter\ mit\ x-\ und\r\n\ y-Wert\ &uuml;bergebene\ Punkt\ legt\ in\ x-Richtung\ die\ Basislinie\r\n\ des\ Textes\ fest.\ Alle\ Buchstaben\ ohne\ Unterl&auml;nge\ (z.\ B.\ A,\r\n\ a,\ b,\ x)\ werden\ oberhalb\ der\ Linie\ dargestellt.\ Buchstaben\ mit\r\n\ Unterl&auml;nge\ (z.\ B.\ p,\ q,\ y)\ durchsto&szlig;en\ diese\ Linie\r\n\ nach\ unten.\r\n\r\n\ @param\ x\ x-Koordinate\ des\ Startpunkts\ des\ Textes\r\n\ @param\ y\ x-Koordinate\ des\ Startpunkts\ des\ Textes,\ legt\ auch\ die\r\n\ Basislinie\ des\ Textes\ fest\r\n\ @param\ text\ auszugebender\ Text\r\n
comment19.params=quelle\ name\ x\ y
comment19.target=void\ neuerPunkt(java.lang.Object,\ java.lang.String,\ int,\ int)
comment19.text=\r\n\ Methode\ zum\ Zeichnen\ eines\ neuen\ Punktes,\ der\ ver&auml;ndert\ und\r\n\ dessen\ Nutzung\ beobachtet\ werden\ kann.\ Der\ Punkt\ kann\ sp&auml;ter\r\n\ beliebig\ bearbeitet\ werden,\ wie\ es\ in\ der\ <a\ href\="\#Nutzung">\r\n\ Beschreibung\ der\ Klasse\ Interaktionsbrett\ </a>\ gezeigt\ wird.\r\n\r\n\ @param\ quelle\ Objekt,\ das\ informiert\ werden\ soll,\ falls\ dieser\r\n\ Punkt\ bearbeitet\ wird\ (h&auml;ufig\ wird\ this\ &uuml;bergeben).\r\n\ @param\ name\ Name\ des\ Objekts,\ der\ zus&auml;tzlich\ mit\ an\ das\ zu\r\n\ informierende\ Objekt\ &uuml;bergeben\ wird.\ Das\ Paar\ (quelle,name)\r\n\ sollte\ eindeutig\ sein.\r\n\r\n\ @param\ x\ x-Koordinate\ des\ Punktes\ (beginnend\ von\ links\ nach\r\n\ rechts)\r\n\ @param\ y\ y-Koordinate\ des\ Punktes\ (beginnend\ von\ oben\ nach\ unten)\r\n\r\n
comment2.params=
comment2.target=void\ run()
comment20.params=quelle\ name\ x\ y\ breite\ hoehe
comment20.target=void\ neuesRechteck(java.lang.Object,\ java.lang.String,\ int,\ int,\ int,\ int)
comment20.text=\r\n\ Methode\ zum\ Zeichnen\ eines\ neuen\ Rechtecks,\ das\ ver&auml;ndert\r\n\ und\ dessen\ Nutzung\ beobachtet\ werden\ kann.\ Das\ Rechteck\ kann\r\n\ sp&auml;ter\ beliebig\ bearbeitet\ werden,\ wie\ es\ in\ der\r\n\ <a\ href\="\#Nutzung">\ Beschreibung\ der\ Klasse\ Interaktionsbrett\r\n\ </a>\ gezeigt\ wird.\r\n\r\n\ @param\ quelle\ Objekt,\ das\ informiert\ werden\ soll,\ falls\ dieses\r\n\ Rechteck\ bearbeitet\ wird\ (h&auml;ufig\ wird\ this\ &uuml;bergeben).\r\n\ @param\ name\ Name\ des\ Objekts,\ der\ zus&auml;tzlich\ mit\ an\ das\ zu\r\n\ informierende\ Objekt\ &uuml;bergeben\ wird.\ Das\ Paar\ (quelle,name)\r\n\ sollte\ eindeutig\ sein.\r\n\ @param\ x\ x-Koordinate\ der\ linken\ oberen\ Ecke\ des\ Rechtecks\r\n\ @param\ y\ y-Koordinate\ der\ linken\ oberen\ Ecke\ des\ Rechtecks\r\n\ @param\ breite\ Breite\ des\ Rechtecks\ (in\ Richtung\ x-Achse)\r\n\ @param\ hoehe\ H&ouml;he\ des\ Rechtecks\ (in\ Richtung\ y-Achse)\r\n
comment21.params=quelle\ name\ x\ y\ radius
comment21.target=void\ neuerKreis(java.lang.Object,\ java.lang.String,\ int,\ int,\ int)
comment21.text=\r\n\ Methode\ zum\ Zeichnen\ eines\ neuen\ Kreises,\ der\ ver&auml;ndert\ und\r\n\ dessen\ Nutzung\ beobachtet\ werden\ kann.\ Der\ Kreis\ kann\ sp&auml;ter\r\n\ beliebig\ bearbeitet\ werden,\ wie\ es\ in\ der\ <a\ href\="\#Nutzung">\r\n\ Beschreibung\ der\ Klasse\ Interaktionsbrett\ </a>\ gezeigt\ wird.\r\n\r\n\ @param\ quelle\ Objekt,\ das\ informiert\ werden\ soll,\ falls\ dieser\r\n\ Kreis\ bearbeitet\ wird\ (h&auml;ufig\ wird\ this\ &uuml;bergeben).\r\n\ @param\ name\ Name\ des\ Objekts,\ der\ zus&auml;tzlich\ mit\ an\ das\ zu\r\n\ informierende\ Objekt\ &uuml;bergeben\ wird.\ Das\ Paar\ (quelle,name)\r\n\ sollte\ eindeutig\ sein.\r\n\ @param\ x\ x-Koordinate\ der\ linken-oberen\ Ecke\ des\ Quadrates,\ das\r\n\ den\ Kreis\ beinhaltet\r\n\ @param\ y\ y-Koordinate\ der\ linken-oberen\ Ecke\ des\ Quadrates,\ das\r\n\ den\ Kreis\ beinhaltet\r\n\ @param\ radius\ Radius\ des\ Kreises\r\n
comment22.params=quelle\ name\ x1\ y1\ x2\ y2
comment22.target=void\ neueLinie(java.lang.Object,\ java.lang.String,\ int,\ int,\ int,\ int)
comment22.text=\r\n\ Methode\ zum\ Zeichnen\ einer\ neuen\ Linie,\ die\ ver&auml;ndert\ und\r\n\ deren\ Nutzung\ mit\ der\ Maus\ beobachtet\ werden\ kann.\ Die\ Linie\ kann\r\n\ sp&auml;ter\ beliebig\ bearbeitet\ werden,\ wie\ es\ in\ der\ <a\r\n\ href\="\#Nutzung">\ Beschreibung\ der\ Klasse\ Interaktionsbrett\ </a>\r\n\ gezeigt\ wird.\r\n\r\n\ @param\ quelle\ Objekt,\ das\ informiert\ werden\ soll,\ falls\ diese\r\n\ Linie\ bearbeitet\ wird\ (h&auml;ufig\ wird\ this\ &uuml;bergeben).\r\n\ @param\ name\ Name\ des\ Objekts,\ der\ zus&auml;tzlich\ mit\ an\ das\ zu\r\n\ informierende\ Objekt\ &uuml;bergeben\ wird.\ Das\ Paar\ (quelle,name)\r\n\ sollte\ eindeutig\ sein.\r\n\ @param\ x1\ x-Koordinate\ des\ ersten\ Punkts\ der\ Linie\r\n\ @param\ y1\ y-Koordinate\ des\ ersten\ Punkts\ der\ Linie\r\n\ @param\ x2\ x-Koordinate\ des\ zweiten\ Punkts\ der\ Linie\r\n\ @param\ y2\ y-Koordinate\ des\ zweiten\ Punkts\ der\ Linie\r\n
comment23.params=quelle\ name\ x\ y\ text
comment23.target=void\ neuerText(java.lang.Object,\ java.lang.String,\ int,\ int,\ java.lang.String)
comment23.text=\r\n\ Methode\ zum\ Zeichnen\ eines\ neuen\ Textes,\ der\ ver&auml;ndert\ und\r\n\ dessen\ Nutzung\ beobachtet\ werden\ kann.\ Der\ Text\ kann\ sp&auml;ter\r\n\ beliebig\ bearbeitet\ werden,\ wie\ es\ in\ der\ <a\ href\="\#Nutzung">\r\n\ Beschreibung\ der\ Klasse\ Interaktionsbrett\ </a>\ gezeigt\ wird.\ Der\r\n\ als\ Parameter\ mit\ x-\ und\ y-Wert\ &uuml;bergebene\ Punkt\ legt\ in\r\n\ x-Richtung\ die\ Basislinie\ des\ Textes\ fest.\ Alle\ Buchstaben\ ohne\r\n\ Unterl&auml;nge\ (z.\ B.\ A,\ a,\ b,\ x)\ werden\ oberhalb\ der\ Linie\r\n\ dargestellt.\ Buchstaben\ mit\ Unterl&auml;nge\ (z.\ B.\ p,\ q,\ y)\r\n\ durchsto&szlig;en\ diese\ Linie\ nach\ unten.\r\n\r\n\ @param\ quelle\ Objekt,\ das\ informiert\ werden\ soll,\ falls\ dieser\r\n\ Text\ bearbeitet\ wird\ (h&auml;ufig\ wird\ this\ &uuml;bergeben).\r\n\ @param\ name\ Name\ des\ Objekts,\ der\ zus&auml;tzlich\ mit\ an\ das\ zu\r\n\ informierende\ Objekt\ &uuml;bergeben\ wird.\ Das\ Paar\ (quelle,name)\r\n\ sollte\ eindeutig\ sein.\r\n\ @param\ x\ x-Koordinate\ des\ Startpunkts\ des\ Textes\r\n\ @param\ y\ y-Koordinate\ des\ Startpunkts\ des\ Textes,\ legt\ auch\ die\r\n\ Basislinie\ des\ Textes\ fest\r\n\ @param\ text\ auszugebender\ Text\r\n
comment24.params=quelle\ name
comment24.target=void\ loescheObjekt(java.lang.Object,\ java.lang.String)
comment24.text=\r\n\ Ein\ mit\ den\ Parametern\ quelle\ und\ name\ vorher\ erzeugtes\r\n\ graphisches\ Element\ wird\ gel&ouml;scht.\r\n\r\n\ @param\ quelle\ Objekt,\ das\ zusammen\ mit\ einem\ zu\ erzeugenden\r\n\ graphischen\ Element\ &uuml;bergeben\ wurde\r\n\ @param\ name\ identifizierender\ Text,\ der\ zusammen\ mit\ einem\ zu\r\n\ erzeugenden\ graphischen\ Element\ &uuml;bergeben\ wurde.\ Das\ Paar\r\n\ (quelle,\ name)\ soll\ ein\ vorher\ erzeugtes\ graphisches\ Element\r\n\ eindeutig\ identifizieren.\r\n
comment25.params=quelle\ name\ x\ y
comment25.target=void\ verschiebeObjektNach(java.lang.Object,\ java.lang.String,\ int,\ int)
comment25.text=\r\n\ Ein\ mit\ den\ Parametern\ quelle\ und\ name\ vorher\ erzeugtes\r\n\ graphisches\ Element\ wird\ auf\ eine\ neue\ Position\ gesetzt.\r\n\r\n\ @param\ quelle\ Objekt,\ das\ zusammen\ mit\ einem\ zu\ erzeugenden\r\n\ graphischen\ Element\ &uuml;bergeben\ wurde\r\n\ @param\ name\ identifizierender\ Text,\ der\ zusammen\ mit\ einem\ zu\r\n\ erzeugenden\ graphischen\ Element\ &uuml;bergeben\ wurde.\ Das\ Paar\r\n\ (quelle\ name)\ soll\ ein\ vorher\ erzeugtes\ graphisches\ Element\r\n\ eindeutig\ identifizieren.\r\n\ @param\ x\ neue\ x-Koordniate\ des\ graphischen\ Elements\r\n\ @param\ y\ neue\ y-Koordniate\ des\ graphischen\ Elements\r\n
comment26.params=o
comment26.target=void\ willTasteninfo(java.lang.Object)
comment26.text=\r\n\ Objekte\ k&ouml;nnen\ an\ ein\ Interaktionsbrett\ so\ &uuml;bergeben\r\n\ werden,\ dass\ sie\ informiert\ werden,\ wenn\ eine\ Taste\ gedr&uuml;ckt\r\n\ wurde.\ Das\ Objekt\ muss\ dazu\ eine\ Methode\ der\ Form<br>\r\n\ <code>public\ void\ tasteGedrueckt(String\ s)</code>\ <br>\r\n\ realisieren,\ wobei\ die\ gedr&uuml;ckte\ Taste\ dann\ im\r\n\ &uuml;bergebenen\ String\ steht.\ Neben\ den\ &uuml;blichen\ Zeichen\r\n\ sind\ auch\ folgende\ Texte\ m&ouml;glich\:\ <br>\r\n\ "F1"-"F12"\ f&uuml;r\ die\ Funktionstasten\ (man\ beachte\ eventuelle\r\n\ Probleme,\ wenn\ die\ Tasten\ von\ anderen\ Programmen\ belegt\r\n\ sind.)<br>\r\n\ "Eingabe"\ f&uuml;r\ die\ Eingabe-\ oder\ Return-Taste\ (auch\r\n\ Enter-Taste)<br>\r\n\ "Strg"\ f&uuml;r\ eine\ der\ Strg-Tasten\ (auch\ CTRL-Tasten\r\n\ genannt)<br>\r\n\ "R&uuml;cktaste"\ f&uuml;r\ die\ R&uuml;ckw&auml;rtstaste\r\n\ (Backspace)\ <br>\r\n\ "Einfg"\ f&uuml;r\ die\ Einfg-Taste\ (Einf&uuml;gen)\ <br>\r\n\ "Pos\ 1"\ f&uuml;r\ die\ Pos1-Taste\ <br>\r\n\ "Ende"\ f&uuml;r\ die\ Ende-Taste\ <br>\r\n\ "Bild\ auf"\ f&uuml;r\ die\ Bild\ nach\ oben-Taste<br>\r\n\ "Bild\ ab"\ f&uuml;r\ die\ Bild\ nach\ unten-Taste\ <br>\r\n\ "ESC"\ f&uuml;r\ die\ Escape-Taste\ (ESC-Taste)\ <br>\r\n\ "Pause"\ f&uuml;r\ die\ Pause-Taste\ <br>\r\n\ "Links"\ f&uuml;r\ die\ Pfeiltaste\ nach\ links<br>\r\n\ "Rechts"\ f&uuml;r\ die\ Pfeiltaste\ nach\ rechts<br>\r\n\ "Oben"\ f&uuml;r\ die\ Pfeiltaste\ nach\ oben<br>\r\n\ "Unten"\ f&uuml;r\ die\ Pfeiltaste\ nach\ unten<br>\r\n\ <br>\r\n\ Von\ der\ Verwendung\ der\ Tabulator-,\ Windows-\ und\ Alt-Tasten\ wird\r\n\ abgeraten,\ da\ sie\ u.\ a.\ Nebeneffekte\ im\ Programm\ haben\r\n\ k&ouml;nnen.\r\n\r\n\ @param\ o\ Objekt,\ dass\ informiert\ werden\ m&ouml;chte,\ wenn\ im\r\n\ Interaktionsbrett\ eine\ Taste\ gedr&uuml;ckt\ wurde\r\n
comment27.params=
comment27.target=void\ zuruecksetzen()
comment27.text=\r\n\ Methode\ mit\ der\ im\ wesentlichen\ der\ Urzustand\ des\r\n\ Interaktionsbretts\ wieder\ hergestellt\ wird.\ Alle\ graphischen\r\n\ Elemente\ werden\ gel&ouml;scht\ und\ Einstellungen\r\n\ zur&uuml;ckgesetzt.\ Die\ Methode\ soll\ nicht\ zum\ Verschieben\ von\r\n\ Objekten\ durch\ L&ouml;schen\ und\ Neuzeichnen\ genutzt\ werden,\ da\r\n\ hier\ Fehler\ auftreten\ k&ouml;nnen.\ Hierzu\ ist\ die\ Methode\r\n\ <code>verschiebeObjektNach(.,.)</code>\ zu\ nutzen.\r\n
comment28.params=
comment28.target=void\ abwischen()
comment28.text=neu\ ab\ Version\ 1.02
comment29.params=p
comment29.target=void\ sucheScreen(java.awt.Point)
comment3.params=arg0
comment3.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment30.params=g
comment30.target=void\ neuMalen(java.awt.Graphics2D)
comment31.params=schluessel
comment31.target=void\ willBenachrichtigtWerden(Interaktionsbrett.Paar)
comment32.params=o\ aktion
comment32.target=boolean\ willBenachrichtigtWerden(java.lang.Object,\ java.lang.String)
comment33.params=e
comment33.target=java.awt.event.MouseEvent\ klickTransformieren(java.awt.event.MouseEvent)
comment4.params=e
comment4.target=void\ componentMoved(java.awt.event.ComponentEvent)
comment5.params=e
comment5.target=void\ componentResized(java.awt.event.ComponentEvent)
comment6.params=groesse
comment6.target=void\ groesseBerechnen(java.awt.Rectangle)
comment7.params=
comment7.target=void\ starteUhr()
comment7.text=\r\n\ Methode\ zum\ Starten\ der\ eingeblendeten\ Stoppuhr.\r\n
comment8.params=
comment8.target=int\ leseUhr()
comment8.text=\r\n\ Methode\ zum\ Ablesen\ der\ bisher\ seit\ dem\ Start\ verbrauchten\ Zeit.\r\n\r\n\ @return\ Zeit\ in\ Millisekunden,\ die\ seit\ dem\ letzten\ Aufruf\ von\r\n\ starteUhr()\ vergangen\ ist\r\n
comment9.params=
comment9.target=int\ stoppeUhr()
comment9.text=\r\n\ Methode\ zum\ Stoppen\ der\ Stoppuhr.\r\n\r\n\ @return\ gemessener\ Wert\ in\ Millisekunden\r\n
numComments=34
