#BlueJ class context
comment0.target=EinUndAusgabe
comment1.params=
comment1.target=EinUndAusgabe()
comment1.text=\r\n\ Konstruktor\ zur\ Erzeugung\ eines\ Objekts\ zur\ Ein-\ und\ Ausgabe.\r\n
comment2.params=
comment2.target=java.lang.String\ leseString()
comment2.text=\r\n\ Methode\ zum\ Lesen\ eines\ Textes\ von\ der\ Konsole,\ der\ &uuml;ber\ die\r\n\ Tastatur\ eingegeben\ wird.\ Die\ Eingabe\ endet\ mit\ der\ Return-Taste\r\n\ und\ darf\ Leerzeichen\ enthalten.\r\n\r\n\ @return\ eingegebener\ Text\r\n
comment3.params=
comment3.target=int\ leseInteger()
comment3.text=\r\n\ Methode\ zum\ Lesen\ einer\ ganzen\ Zahl\ von\ der\ Konsole,\ die\r\n\ &uuml;ber\ die\ Tastatur\ eingegeben\ wird.\ Die\ Eingabe\ endet\ mit\ der\r\n\ Return-Taste.\ Sollte\ es\ sich\ bei\ der\ Eingabe\ um\ keinen\r\n\ g&uuml;ltigen\ Wert\ handeln,\ wird\ -1\ zur&uuml;ckgegeben.\r\n\r\n\ @return\ eingegebene\ Zahl\r\n
comment4.params=
comment4.target=float\ leseFloat()
comment4.text=\r\n\ Methode\ zum\ Lesen\ einer\ Float-Zahl\ von\ der\ Konsole,\ die\ &uuml;ber\r\n\ die\ Tastatur\ eingegeben\ wird.\ Die\ Eingabe\ endet\ mit\ der\r\n\ Return-Taste.\ Sollte\ es\ sich\ bei\ der\ Eingabe\ um\ keinen\r\n\ g&uuml;ltigen\ Wert\ handeln,\ wird\ -1\ zur&uuml;ckgegeben.\r\n\r\n\ @return\ eingegebene\ Zahl\r\n
comment5.params=
comment5.target=double\ leseDouble()
comment5.text=\r\n\ Methode\ zum\ Lesen\ einer\ Double-Zahl\ von\ der\ Konsole,\ die\r\n\ &uuml;ber\ die\ Tastatur\ eingegeben\ wird.\ Die\ Eingabe\ endet\ mit\ der\r\n\ Return-Taste.\ Sollte\ es\ sich\ bei\ der\ Eingabe\ um\ keinen\r\n\ g&uuml;ltigen\ Wert\ handeln,\ wird\ -1\ zur&uuml;ckgegeben.\r\n\r\n\ @return\ eingegebene\ Zahl\r\n
comment6.params=
comment6.target=boolean\ leseBoolean()
comment6.text=\r\n\ Methode\ zum\ Lesen\ eines\ Wahrheitswertes\ von\ der\ Konsole,\ der\r\n\ &uuml;ber\ die\ Tastatur\ eingegeben\ wird.\ Die\ Eingabe\ endet\ mit\ der\r\n\ Return-Taste.\ Sollte\ es\ sich\ bei\ der\ Eingabe\ nicht\ um\ "true"\r\n\ handeln,\ wird\ false\ zur&uuml;ckgegeben.\r\n\r\n\ @return\ eingegebener\ Wahrheitswert\r\n
comment7.params=obj
comment7.target=void\ ausgeben(java.lang.Object)
comment7.text=\r\n\ Methode\ zur\ Ausgabe\ eines\ &uuml;bergebenen\ Textes.\ Es\ wird\ kein\r\n\ Zeilenumbruch\ angeh&auml;ngt.\r\n\r\n\ @param\ obj\ auszugebendes\ Objekt\ (nutzt\ jeweiliges\ toString)\r\n
comment8.params=text\ objekte
comment8.target=void\ formatiertAusgeben(java.lang.String,\ java.lang.Object[])
comment8.text=\r\n\ Methode\ zur\ C-formatierten\ Ausgabe\ verschiedener\ Variablen\ und\r\n\ Textelemente\r\n\r\n\ @param\ text\ auszugebender\ Text,\ der\ Spezialzeichen\ wie\ %d\ als\r\n\ Platzhalter\ f&uuml;r\ auszugebene\ Variablen\ enthalten\ kann\r\n\ @param\ objekte\ Objekte,\ die\ an\ Stelle\ der\ Platzhalter\ im\ Text\r\n\ ausgegeben\ werden\ sollen\r\n
comment9.params=start\ ende
comment9.target=java.lang.Integer\ zufall(java.lang.Integer,\ java.lang.Integer)
comment9.text=\r\n\ Methode\ zur\ Erzeugung\ einer\ ganzahligen\ Zufallszahl\ zwischen\r\n\ (einschlie&szlig;lich)\ den\ &uuml;bergebenen\ Grenzen.\ Es\ wird\r\n\ erwartet\ und\ nicht\ gepr&uuml;ft,\ dass\ der\ Endwert\ nicht\ kleiner\r\n\ als\ der\ Startwert\ ist.\r\n\r\n\ @param\ start\ minimal\ m&ouml;glicher\ Zufallswert\r\n\ @param\ ende\ maximal\ m&ouml;glicher\ Zufallswert\r\n\ @return\ zuf&auml;lliger\ Wert\ zwischen\ start\ und\ ende\ (auch\ diese\r\n\ beiden\ Werte\ sind\ m&ouml;glich\r\n
numComments=10
